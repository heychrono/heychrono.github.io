let seconds=0,timeSolved=0,milliseconds=1,isRunning=null,isRunTriggered=!1,isAlreadySecond=null,millisecondsDuration=20,storageName="chronobiks-2021-v1";const dateObject=new Date,currentMonth=dateObject.toLocaleString("default",{month:"short"}),currentDay=dateObject.getUTCDate(),currentYear=dateObject.getFullYear(),currentDateToday=`${currentDay} ${currentMonth} ${currentYear}`,timeSolvedElement=document.querySelector("#timeSolved"),millisecondsElement=document.querySelector("#milliseconds"),secondsElement=document.querySelector("#seconds"),timerElement=document.querySelector("#timer"),runButtonElement=document.querySelector("#runTimer"),navbar=document.querySelector(".navbar"),goTriggered=document.querySelector(".go"),newestTime=document.querySelector(".timer__newest");let messageGuideElement=document.querySelector("#message-guide");null==localStorage.getItem(storageName)&&localStorage.setItem(storageName,!1);const changeElementValue=(e,t)=>t.textContent=e,changeElementColor=(e,t)=>t.style.color=e,addZeroFirstCharacterString=e=>String(e).padStart(2,"0"),htmlEntities=e=>String(e).replace(/&/g,"&amp;").replace(/</g,"").replace(/>/g,"").replace(/"/g,""),startTimer=e=>e?isRunning=setInterval(updateTimerElement,millisecondsDuration):resetTimerElement();let timerTrigger=()=>{isRunTriggered=!isRunTriggered,startTimer(isRunTriggered)},getLocalStorageData=e=>localStorage.getItem(e);const defaultTimeListData=[{id:1,time:"00.00",date:currentDateToday}];let localStorageParse=JSON.parse(getLocalStorageData(storageName)),oldTimeListData=localStorageParse||"",timeListDataStorage=[...oldTimeListData],timeListID=0;for(let e=0;e<oldTimeListData.length;e++)timeListID+=1,oldTimeListData[e].id=timeListID;let timePerformance=e=>{let t=[];return"false"==getLocalStorageData(storageName)?"00.00":(timeListDataStorage.forEach(e=>{isNaN(e.time)||t.push(e.time)}),"best"==e?Math.min(...t):Math.max(...t))},timePerformanceDate=e=>{let t;return"00.00"==timePerformance()?"Today":("best"==e?timeListDataStorage.forEach(e=>{timePerformance("best")==e.time&&(t=e.date)}):timeListDataStorage.forEach(e=>{timePerformance("worst")==e.time&&(t=e.date)}),t)},addTimeToList=()=>{let e={},t=timeListDataStorage.length,a=timeSolved.toString().split(".");1==a[1].length&&(timeSolved=`${a[0]}.0${a[1]}`),e.id=t+=1,e.time=parseFloat(htmlEntities(timeSolved)),e.date=htmlEntities(currentDateToday),timeListDataStorage.push(e),localStorage.setItem(storageName,JSON.stringify(timeListDataStorage))};const resetTimerElement=()=>{lever=!1,timeSolved=`${seconds}.${milliseconds}`,addTimeToList(),seconds=0,milliseconds=0,clearInterval(isRunning),changeElementValue("00",secondsElement),changeElementValue("00",millisecondsElement)},updateTimerElement=()=>{milliseconds++,isAlreadySecond=60==milliseconds,isAlreadySecond&&(seconds+=1,milliseconds=0,changeElementValue(addZeroFirstCharacterString(seconds),secondsElement)),changeElementValue(addZeroFirstCharacterString(milliseconds),millisecondsElement)};let newestTimeVariable=()=>{if("false"!==getLocalStorageData(storageName))return timeListDataStorage.slice().reverse()[0].time},newestDateVariable=()=>{if("false"!==getLocalStorageData(storageName))return timeListDataStorage.slice().reverse()[0].date};const updateAll=()=>{timerTrigger(),appList.$data.timeListFromStorage=timeListDataStorage,appList.$data.reverseTodayProperty=[...timeListDataStorage.slice().reverse()],appList.$data.bestSolvedTimeReactive=timePerformance("best"),appList.$data.worstSolvedTimeReactive=timePerformance("worst"),appList.$data.bestSolvedDateReactive=timePerformanceDate("best"),appList.$data.worstSolvedDateReactive=timePerformanceDate("worst"),appNewest.$data.timeListFromStorage=timeListDataStorage,appNewest.$data.newestTime=newestTimeVariable(),appNewest.$data.newestDate=newestDateVariable()};let lastKeyUpAt=0,isTriggered=!1,modalElement=document.querySelector("#modal");const pressVerify=(e=1e3)=>{var t=new Date;1==isTriggered?(isTriggered=!1,document.querySelector("#_hj_feedback_container").removeAttribute("style"),newestTime.classList.remove("timer__newest--timerRunning"),navbar.classList.remove("navbar--timerRunning"),messageGuideElement.textContent="Hold space or touch and hold anywhere to run the timer",updateAll()):setTimeout(()=>{+t>+lastKeyUpAt?(document.querySelector("#_hj_feedback_container").style.display="none",messageGuideElement.textContent="Release space or touch to run the timer",newestTime.classList.add("timer__newest--timerRunning"),navbar.classList.add("navbar--timerRunning"),goTriggered.classList.remove("go--hide"),isTriggered=!0):isTriggered=!1},e)},spaceKeyDown=e=>{if(!e.repeat&&!sidebar.classList.contains("sidebar--open")&&modalElement.classList.contains("modal--hide"))return"Space"==e.code?pressVerify():void 0},spaceKeyUp=e=>{if("Space"==e.code&&(goTriggered.classList.add("go--hide"),lastKeyUpAt=new Date,1==isTriggered))return messageGuideElement.textContent="Hit space or touch to stop the timer",updateAll()},mouseClickDown=e=>{e.target.closest("#open-button")||sidebar.classList.contains("sidebar--open")||modalElement.classList.contains("modal--hide")&&pressVerify()},mouseClickRelease=()=>{if(goTriggered.classList.add("go--hide"),lastKeyUpAt=new Date,1==isTriggered)return messageGuideElement.textContent="Hit space or touch to stop the timer",updateAll()},touchDown=e=>{if(!e.repeat&&!e.target.closest("#open-button")&&!e.target.closest(".timer__newest")&&!sidebar.classList.contains("sidebar--open")&&modalElement.classList.contains("modal--hide"))return e.touches.length>1?lastKeyUpAt=new Date:void pressVerify()},touchRelease=()=>{if(goTriggered.classList.add("go--hide"),lastKeyUpAt=new Date,1==isTriggered)return messageGuideElement.textContent="Hit space or touch to stop the timer",updateAll()};document.addEventListener("keydown",spaceKeyDown),document.addEventListener("keyup",spaceKeyUp),document.addEventListener("mousedown",mouseClickDown),document.addEventListener("mouseup",mouseClickRelease),document.addEventListener("touchstart",touchDown),document.addEventListener("touchend",touchRelease);let ifTimeListEmpty=e=>e.length<=0?defaultTimeListData:e;const appList=new Vue({el:"#app-list",data:{todayListCount:5,pastListCount:5,currentDateToday:currentDateToday,reverseTodayProperty:ifTimeListEmpty([...timeListDataStorage.slice().reverse()]),bestSolvedDateReactive:timePerformanceDate("best"),worstSolvedDateReactive:timePerformanceDate("worst"),bestSolvedTimeReactive:timePerformance("best"),worstSolvedTimeReactive:timePerformance("worst"),timeListFromStorage:localStorageParse||defaultTimeListData},methods:{getTimeListCountToday:function(){let e=[];return timeListDataStorage.forEach(t=>{t.date==this.currentDateToday&&e.push(t.date)}),e.length},resetTimeList:function(){}}}),appNewest=new Vue({el:"#app-newest",data:{timeListFromStorage:getLocalStorageData(storageName),currentDateToday:currentDateToday,newestTime:newestTimeVariable(),newestDate:newestDateVariable()}});let generateRandomIndex=e=>Math.floor(Math.random()*e+0);const generateResetCode=()=>{const e=["rick","morty","scooby","senku","chrono","powfu","myopi","baki","kravets"],t=e.length;return`${e[generateRandomIndex(t)]}-${e[generateRandomIndex(t)]}-${e[generateRandomIndex(t)]}-${e[generateRandomIndex(t)]}`},appReset=new Vue({el:"#app-reset",data:{resetCode:"",resetCodeGenerated:generateResetCode()},methods:{resetMyList:function(){const e=[{id:1,time:"Reset, 00:00",date:currentDateToday}];resetTimerElement(),timeListDataStorage=e,appList.$data.timeListFromStorage=e,localStorage.setItem(storageName,JSON.stringify(e)),location.reload()}}});